{"version":3,"sources":["component/lib/WithErrorBoundary/index.jsx","component/lib/WarpperFullScreen/index.jsx","component/layout/BasicLayout.jsx","component/lib/Example/logo.svg","page/404.jsx","store/router.js","store/index.js","App.jsx","serviceWorker.js","index.js","common/defines.js","component/lib/Example/index.jsx","page/index.jsx"],"names":["withErrorBoundary","WrappedComponent","_class","_temp","_PureComponent","Object","D_projects_redoc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_projects_redoc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_projects_redoc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_projects_redoc_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_projects_redoc_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_error_boundary__WEBPACK_IMPORTED_MODULE_6___default","props","PureComponent","displayName","concat","name","getDisplayName","WarpperFullScreen","styled","div","_templateObject","BasicLayout","react_default","lib_WarpperFullScreen","children","module","exports","__webpack_require__","p","Box","NotFound","react__WEBPACK_IMPORTED_MODULE_1___default","_component_layout_BasicLayout__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","Router","routing","_this","classCallCheck","histories","autorun","_routing$location","location","history","hash","pathname","search","state","time","Date","length","pop","unshift","storeRoot","router","browserHistory","createBrowserHistory","routingStore","RouterStore","syncHistoryWithStore","setRouting","App","Fragment","es_Router","Switch","Route","path","exact","component","require","default","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","defines","process","Example","inputRef","Env","span","className","src","logo","alt","href","target","rel","Component","Index","component_lib_Example"],"mappings":"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","file":"static/js/main.3e6bd168.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport ErrorBoundary from 'react-error-boundary';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nconst withErrorBoundary = () => (WrappedComponent) => {\n  return class extends PureComponent {\n    static displayName =\n      `withErrorBoundary(${getDisplayName(WrappedComponent)})`;\n\n    render() {\n      return (\n        <ErrorBoundary>\n          <WrappedComponent {...this.props} />\n        </ErrorBoundary>\n      );\n    }\n  };\n};\n\nexport default withErrorBoundary;\n","import styled from 'styled-components';\n\nconst WarpperFullScreen = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  overflow: auto;\n`;\n\nexport default WarpperFullScreen;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport withErrorBoundary from '../lib/WithErrorBoundary';\nimport WarpperFullScreen from '../lib/WarpperFullScreen';\n\n@withErrorBoundary()\nclass BasicLayout extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  render() {\n    return (\n      <WarpperFullScreen>\n        {this.props.children}\n      </WarpperFullScreen>\n    );\n  }\n}\n\nexport default BasicLayout;\n","module.exports = __webpack_public_path__ + \"static/media/logo.12f9e7b3.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport BasicLayout from '../component/layout/BasicLayout';\n\nconst Box = styled.p`text-align: center`;\n\nconst NotFound = () => (\n  <BasicLayout>\n    <Box>404 PAGE NOT FOUND</Box>\n    <Box><Link to=\"/\">Home</Link></Box>\n  </BasicLayout>\n);\n\nexport default NotFound;\n","import { autorun } from 'mobx';\n\nclass Router {\n  /**\n   * routing\n   * @type {MobxReactRouter.RouterStore}\n   */\n  routing;\n\n  histories = [];\n\n  constructor(routing) {\n    this.routing = routing;\n    autorun(() => {\n      const { location: { hash, key, pathname, search, state } } = routing;\n      const history = {\n        hash,\n        key,\n        pathname,\n        search,\n        state,\n        time: new Date(),\n      };\n      if (this.histories.length >= 100) {\n        this.histories.pop();\n      }\n      this.histories.unshift(history);\n    });\n  }\n}\nexport default Router;\n","import Router from './router';\n\nclass StoreRoot {\n  setRouting(routing) {\n    this.router = new Router(routing);\n  }\n}\nconst storeRoot = new StoreRoot();\nexport default storeRoot;\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport storeRoot from './store';\n\nconst browserHistory = createBrowserHistory();\nconst routingStore = new RouterStore();\nconst history = syncHistoryWithStore(browserHistory, routingStore);\nstoreRoot.setRouting(routingStore);\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" exact component={require('./page/index').default} />\n          <Route component={require('./page/404').default} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const isProduction = process.env.NODE_ENV === 'production';\nexport default {\n  IS_PRODUCTION: isProduction,\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport logo from './logo.svg';\nimport './index.sass';\nimport defines from '../../../common/defines';\n\nclass Example extends Component {\n  inputRef = null;\n\n  render() {\n    const Env = styled.span`\n      position: absolute;\n      top: 4px;\n      right: 4px;\n      color: darkgrey;\n      font-size: 12px;\n    `;\n    return (\n      <div className=\"App\">\n        <Env>\n          {defines.IS_PRODUCTION\n            ? 'PRODUCTION'\n            : 'DEVELOPMENT'}\n        </Env>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n          <p className=\"App-server-hint\">\n            Start your server by <code>npm run build && npm run server</code></p>\n          <a\n            className=\"App-link\"\n            href=\"https://github.com/yuri2peter/reacoa.git\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn Reacoa\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","import React, { Component } from 'react';\nimport withErrorBoundary from '../component/lib/WithErrorBoundary';\nimport Example from '../component/lib/Example';\nimport BasicLayout from '../component/layout/BasicLayout';\n\n@withErrorBoundary()\nclass Index extends Component {\n  render() {\n    return (\n      <BasicLayout>\n        <Example />\n      </BasicLayout>\n    );\n  }\n}\n\nexport default Index;\n"],"sourceRoot":""}